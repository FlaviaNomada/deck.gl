let config, jsonInput, jsonConverter;

jsonInput = JSON.parse(JSON.stringify({{json_input}}));

function valueChanged() {
  const jsonProps = jsonConverter.convertJsonToDeckProps(jsonInput);
  config.setProps(jsonProps);
}


function init(deck, mapboxgl) {
  deck.log.priority=1;

  const layersDict = {};
  const layers = Object.keys(deck).filter(x => x.indexOf('Layer') > 0 && x.indexOf('_') !== 0);
  layers.map(k => layersDict[k] = deck[k]);

  jsonConverter = new deck._JSONConverter({
    configuration: {
      layers: layersDict
    }
  });

  config = new deckgl.DeckGL({
    map: mapboxgl,
    mapboxApiAccessToken: '{{mapbox_api_key}}',
    canvas: 'deck-map-container',
    height: '100%',
    width: '100%',
    onLoad: valueChanged.bind(this),
  });
}

requirejs(['deck', 'mapboxgl'], init);
